#! /usr/bin/env python
import os
import shutil
import json
from subprocess import Popen, PIPE

PROJECT_PATH = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))
BUNDLE_PATH = os.path.join(PROJECT_PATH, 'deploy/dist/current')


def exec_command(command):
    args = command.split(' ')
    p = Popen(args, stdout=PIPE, bufsize=1)
    for line in iter(p.stdout.readline, b''):
        print line
    p.communicate()


def bundle_waartaa():
    try:
        os.makedirs(BUNDLE_PATH)
    except OSError:
        pass
    if os.path.exists(BUNDLE_PATH):
        print "Cleaning up existing distribution directory."
        shutil.rmtree(BUNDLE_PATH)
    os.chdir(os.path.join(PROJECT_PATH, 'app'))
    exec_command('meteor build %s --directory' % BUNDLE_PATH)


def customize_package_json():
    if 'newrelic' in extra_deps:
        f = open(os.path.join(
            BUNDLE_PATH, 'bundle/main.js'))
        content = 'require("newrelic");\n' + f.read()
        f.close()
        exec_command('chmod u+w %s' % (
            os.path.join(BUNDLE_PATH, 'bundle/main.js')))
        f = open(os.path.join(
            BUNDLE_PATH, 'main.js'), 'w')
        f.write(content)
        f.close()
        exec_command('chmod u-w %s' % (
            os.path.join(BUNDLE_PATH, 'bundle/main.js')))


if __name__ == '__main__':
    bundle_waartaa()
    #customize_package_json()
